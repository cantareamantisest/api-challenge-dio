<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SampleRestApi</name>
    </assembly>
    <members>
        <member name="M:SampleRestApi.Controllers.FeaturesController.GetAsync">
            <summary>
            Obter uma lista das features
            </summary>
            <remarks>
            Obtém uma lista com todas as features cadastradas
            </remarks>
            <returns></returns>
            <response code="200">
            Success
            </response>
        </member>
        <member name="M:SampleRestApi.Controllers.FeaturesController.DeleteAsync(System.Int64)">
            <summary>
            Excluir uma feature
            </summary>
            <remarks>
            Exclui uma feature em função do Id fornecido mantendo as informações do usuário inalteradas 
            </remarks>
            <response code="204">
            Feature deleted successful!
            </response>
            <response code="400">
            Bad Request
            </response>
            <response code="500">
            Internal Server Error
            </response>
        </member>
        <member name="M:SampleRestApi.Controllers.NewsController.GetAsync">
            <summary>
            Obter uma lista das news
            </summary>
            <remarks>
            Obtém uma lista com todas as news cadastradas
            </remarks>
            <returns></returns>
            <response code="200">
            Success
            </response>
        </member>
        <member name="M:SampleRestApi.Controllers.NewsController.DeleteAsync(System.Int64)">
            <summary>
            Excluir uma news
            </summary>
            <remarks>
            Exclui uma news em função do Id fornecido mantendo as informações do usuário inalteradas 
            </remarks>
            <response code="204">
            News deleted successful!
            </response>
            <response code="400">
            Bad Request
            </response>
            /// <response code="500">
            Internal Server Error
            </response>
        </member>
        <member name="M:SampleRestApi.Controllers.UserController.GetAsync">
            <summary>
            Obter uma lista dos usuários
            </summary>
            <remarks>
            Obtém uma lista com todos os usuários cadastrados
            </remarks>
            <returns></returns>
            <response code="200">
            Success
            </response>
        </member>
        <member name="M:SampleRestApi.Controllers.UserController.GetByIdAsync(System.Int64)">
            <summary>
            Obter um usuário pelo Id
            </summary>
            <remarks>
            Obtém um usuário de acordo com o Id fornecido.
            </remarks>
            <returns name="model">
            Retorna os dados do usuário desejado caso esteja cadastrado
            </returns>
            <response code="200">
            Success
            </response>
            <response code="400">
            Bad Request
            </response>
        </member>
        <member name="M:SampleRestApi.Controllers.UserController.PostAsync(SampleRestApi.ViewModels.UserViewModel)">
            <summary>
            Adicionar um usuário
            </summary>
            <remarks>
            Adiciona um usuário de acordo com o modelo fornecido. Observação: Os objetos 'News' e 'Features' não são requeridos.
            </remarks>
            <returns name="model">
            Retorna o usuário recém adicionado
            </returns>
            <response code="201">
            Success
            </response>
            <response code="400">
            Bad Request
            </response>
        </member>
        <member name="M:SampleRestApi.Controllers.UserController.PutAsync(SampleRestApi.ViewModels.UserViewModel,System.Int64)">
            <summary>
            Atualizar um usuário
            </summary>
            <remarks>
            Atualiza um usuário de acordo com o modelo fornecido. Observação: Os objetos 'News' e 'Features' não são requeridos.
            </remarks>
            <returns name="model">
            Retorna o usuário recém atualizado
            </returns>
            <response code="200">
            Success
            </response>
            <response code="400">
            Bad Request
            </response>
        </member>
        <member name="M:SampleRestApi.Controllers.UserController.DeleteAsync(System.Int64)">
            <summary>
            Excluir um usuário
            </summary>
            <remarks>
            Exclui um usuário e seus respectivos relacionamento em função do Id fornecido
            </remarks>
            <response code="204">
            User deleted successful!
            </response>
            <response code="400">
            Bad Request
            </response>
        </member>
        <member name="T:SampleRestApi.Migrations.InitialDatabase">
            <inheritdoc />
        </member>
        <member name="M:SampleRestApi.Migrations.InitialDatabase.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:SampleRestApi.Migrations.InitialDatabase.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:SampleRestApi.Migrations.InitialDatabase.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
